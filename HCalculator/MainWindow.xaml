<Window x:Class="HCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HCalculator"
        mc:Ignorable="d"
        Title="Test Calculator" Height="450" Width="400">
    <Window.Resources>
        <SolidColorBrush x:Key="allBorderColor" Color="SlateBlue"/>
        <Style TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>            
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5,0,0,0" Margin="3"
                                BorderThickness="3" BorderBrush="{StaticResource allBorderColor}">
                            
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Green" />
                            </Trigger>
                            
                        </ControlTemplate.Triggers>-->

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="30"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Border Grid.Column="0"  Grid.ColumnSpan="5" Grid.Row="0" 
                
                Margin="3" BorderThickness="5"  BorderBrush="{StaticResource allBorderColor}" CornerRadius="10,0,0,0"
                >
            <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Operand1}" FontSize="20"/>
                    <Separator Margin="10"/>
                    <TextBlock Text="{Binding Operation}" FontSize="20"/>
                </StackPanel>
                <Separator Margin="3"/>
                <TextBlock Text="{Binding Result}" FontSize="26" Margin="10" />
            </StackPanel>
        </Border>
        <Button Grid.Column="0" Grid.Row="4" Command="{Binding SetDigitCommand}" CommandParameter="0">0</Button>
        <Button Grid.Column="0" Grid.Row="3" Command="{Binding SetDigitCommand}" CommandParameter="1">1</Button>
        <Button Grid.Column="1" Grid.Row="3" Command="{Binding SetDigitCommand}" CommandParameter="2">2</Button>
        <Button Grid.Column="2" Grid.Row="3" Command="{Binding SetDigitCommand}" CommandParameter="3">3</Button>
        <Button Grid.Column="0" Grid.Row="2" Command="{Binding SetDigitCommand}" CommandParameter="4">4</Button>
        <Button Grid.Column="1" Grid.Row="2" Command="{Binding SetDigitCommand}" CommandParameter="5">5</Button>
        <Button Grid.Column="2" Grid.Row="2" Command="{Binding SetDigitCommand}" CommandParameter="6">6</Button>
        <Button Grid.Column="0" Grid.Row="1" Command="{Binding SetDigitCommand}" CommandParameter="7">7</Button>
        <Button Grid.Column="1" Grid.Row="1" Command="{Binding SetDigitCommand}" CommandParameter="8">8</Button>
        <Button Grid.Column="2" Grid.Row="1" Command="{Binding SetDigitCommand}" CommandParameter="9">9</Button>

        <Button Grid.Column="1" Grid.Row="4" Command="{Binding SetDigitCommand}" CommandParameter=",">.</Button>

        <Button Grid.Column="3" Grid.Row="4" Command="{Binding SetOperationCommand}" CommandParameter="+" ToolTip="Сложение">+</Button>
        <Button Grid.Column="3" Grid.Row="3" Command="{Binding SetOperationCommand}" CommandParameter="-" ToolTip="Вычетание">-</Button>
        <Button Grid.Column="3" Grid.Row="2" Command="{Binding SetOperationCommand}" CommandParameter="/" ToolTip="Деление">/</Button>
        <Button Grid.Column="3" Grid.Row="1" Command="{Binding SetOperationCommand}" CommandParameter="*" ToolTip="Умножение">*</Button>


        <Button Grid.Column="4" Grid.Row="3" Grid.RowSpan="2" Command="{Binding CalculeteCommand}">=</Button>
        <Button Grid.Column="4" Grid.Row="1"  Command="{Binding ClearCommand}">C</Button>
        <Button Grid.Column="2" Grid.Row="4" Command="{Binding OpenAdvancedFuncCommand}">∨</Button>
        <Popup IsOpen="{Binding Advanced}"   StaysOpen="True" AllowsTransparency="true" Placement="Mouse" PopupAnimation="Scroll">
            <Border Background="White" BorderBrush="{StaticResource allBorderColor}" BorderThickness="4" CornerRadius="20,0,0,0">
            <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>                        
                    </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="Дополнительные функции" FontSize="20" Margin="5"/>
                    <WrapPanel Grid.Row="1" Width="250">
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="abs" ToolTip="Модуль">abs</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="sin" ToolTip="синус">sin</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="cos" ToolTip="косинус">cos</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="tan" ToolTip="тингенс">tn</Button>
 
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="rnd" ToolTip="округлить до целых">0.</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="rnd0" ToolTip="округлить до десятых">0.0</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="rnd00" ToolTip="округлить до сотых">0.00</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="rnd000" ToolTip="округлить до тысячных">0.000</Button>
                        
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="x2" ToolTip="Возвести в квадрад">x²</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="xp" ToolTip="Возвести в степень p">xᴾ</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="sqrt" ToolTip="Извлечь корень">√</Button>
                        <Button Command="{Binding SetOperationCommand}" CommandParameter="inv" ToolTip="">+/-</Button>
                    </WrapPanel>
                
                
            </Grid>
                
            </Border>
        </Popup>
    </Grid>
</Window>
